---
import "../styles/global.css";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!-- Global -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />

<!-- Google Search Console -->
<meta
  name="google-site-verification"
  content="HKmw1FhzbCh-mBGnSzdcwyZCnqOq6NfeHht8lGh3wtE"
/>

<!-- Google tag (gtag.js) -->
{ import.meta.env.PROD && (
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JQ438Q8K4Z"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JQ438Q8K4Z');
</script>
)}

<script is:inline>
  // For dark mode
  const MEDIA_QUERY_STR = "(prefers-color-scheme: dark)";
  const element = document.documentElement;

  const theme = (() => {
    // if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
    //   return localStorage.getItem("theme");
    // }
    if (window.matchMedia(MEDIA_QUERY_STR).matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    element.classList.remove("dark");
  } else {
    element.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  // add event listener for prefers-color-scheme
  window.matchMedia(MEDIA_QUERY_STR).addEventListener("change", (e) => {
    const isDark = e.matches;
    const theme = isDark ? "dark" : "light";
    if (isDark) {
      element.classList.add("dark");
      localStorage.setItem("theme", theme);
    } else {
      element.classList.remove("dark");
      localStorage.setItem("theme", theme);
    }
  });
</script>
